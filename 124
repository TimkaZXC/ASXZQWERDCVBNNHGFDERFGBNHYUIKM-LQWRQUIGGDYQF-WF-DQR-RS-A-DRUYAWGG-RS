local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/TimkaZXC/ASXZQWERDCVBNNHGFDERFGBNHYUIKM-LQWRQUIGGDYQF-WF-DQR-RS-A-DRUYAWGG-RS/refs/heads/main/Library_V3"))()
local Hub = Lib.Hub("üçÄ[üéÑ]Undead Defense")
local Kill = Hub:Section("[üéÑ]Main", Color3.fromRGB(255,0,0))
Kill:Title("[üéÑ]Kill Aura's", Color3.fromRGB(255,0,0))
Kill:Toggle("[üßü‚Äç‚ôÇÔ∏è]Zombie", Color3.new(1,1,1), function(s)
local function Test(mob)
local RunService = game:GetService("RunService")
for _, mob in pairs(workspace.Living:GetChildren()) do
    if mob and mob:IsA("Model") then
    if mob:FindFirstChild("HumanoidRootPart") then
        if mob.Name ~= game.Players.LocalPlayer.Name then
local args = {
    [1] = {
        ["Instance"] =  mob.HumanoidRootPart,
        ["Material"] = Enum.Material.Neon,
        ["Normal"] = Vector3.new(0, 0, 0),
        ["Position"] = mob.HumanoidRootPart.Position
    },
    [2] = Vector3.new(0, 0, 0)
}

game:GetService("ReplicatedStorage").Remotes.GunSystem.SwingMelee:FireServer(unpack(args))
        end
    end
end

end
end

if s then
RunService.Heartbeat:Connect(function()
Test()
end)
else

end
end)

Kill:Toggle("[üßë]Survivor", Color3.new(1,1,1), function(s)
local function Test(mob)
local player = game:GetService("Players").LocalPlayer
if mob then
if mob.Name ~= player.Name then

local mesh = mob:FindFirstChildOfClass("MeshPart")
local part = mob:FindFirstChildOfClass("Part")
if mesh then
local distance = (player.Character:WaitForChild("HumanoidRootPart").Positionn - mesh.Position).Magnitude
if distance < 15 then
local args = {
    [1] = {
        ["Instance"] =  mesh,
        ["Material"] = Enum.Material.Neon,
        ["Normal"] = Vector3.new(0, 999, 0),
        ["Position"] = mesh.Position
    },
    [2] = Vector3.new(0, 999, 0)
}

game:GetService("ReplicatedStorage").Remotes.GunSystem.SwingMelee:FireServer(unpack(args))
end
elseif part then
local distance = (player.Character:WaitForChild("HumanoidRootPart").Position - part.Position).Magnitude
if distance < 15 then
local args = {
    [1] = {
        ["Instance"] =  part,
        ["Material"] = Enum.Material.Neon,
        ["Normal"] = Vector3.new(0, 999, 0),
        ["Position"] = part.Position
    },
    [2] = Vector3.new(0, 999, 0)
}

game:GetService("ReplicatedStorage").Remotes.GunSystem.SwingMelee:FireServer(unpack(args))
end
end

end
end

end

if s then
for _, mob in pairs(workspace.Living.Friendly:GetChildren()) do
if mob:IsA("Model") then
Test(mob)
print(mob)
end
end
else

end
end)


-- Defense
local args = {
    [1] = {
        ["Normal"] = Vector3.new(-0.4839317500591278, -0.14740301668643951, -0.8626020550727844),
        ["Position"] = Vector3.new(43.19368362426758, 8.653739929199219, -168.357666015625),
        ["Instance"] = workspace.Props.wood_crate001a,
        ["InstanceCF"] = CFrame.new(44.311431884765625, 7.784229278564453, -167.2010498046875) * CFrame.Angles(-0.28359827399253845, -1.163934588432312, -0.2643398642539978),
        ["Material"] = Enum.Material.Wood
    },
    [2] = Vector3.new(0.2840377986431122, -0.3455601930618286, 0.8943772315979004)
}

game:GetService("ReplicatedStorage").Remotes.GunSystem.SwingMelee:FireServer(unpack(args))
-- Damage
local args = {
    [1] = {
        ["Instance"] = workspace.Props.prop_physics_37317,
        ["Material"] = Enum.Material.Plastic,
        ["Normal"] = Vector3.new(0.9970210194587708, -0.015877345576882362, -0.07547856122255325),
        ["Position"] = Vector3.new(155.5767822265625, -30.455217361450195, -266.3798522949219)
    },
    [2] = Vector3.new(-0.7234710454940796, 0.689760684967041, 0.028633657842874527)
}

game:GetService("ReplicatedStorage").Remotes.GunSystem.SwingMelee:FireServer(unpack(args))
--Grab
local args = {
    [1] = workspace.Props.wood_crate001a
}

game:GetService("ReplicatedStorage").Remotes.HandleProp:FireServer(unpack(args))
--Hit

